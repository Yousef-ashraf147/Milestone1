const express = require("express");
const router = express.Router();
var alert = require('alert');
const session = require("express-session");

router.get("/home", function (req, res) {
    if (req.session.Country == "Egypt" || req.session.Country == "United Kingdom") {
        req.session.currency = "£"
        res.render("home", { currency: req.session.currency })
    }
    else if (req.session.Country == "Germany") {
        req.session.currency = "€"
        res.render("home", { currency: req.session.currency })
    }
    else {
        req.session.currency = "$"
        res.render("home", { currency: req.session.currency })
    }
})
router.get("/login", function (req, res) {
    res.render("login");
})

router.get("/signup", function (req, res) {
    res.render("signup");
})

router.get("/signupAdmin", function (req, res) {
    res.render("signupAdmin");
})

router.get("/signupInstruc", function (req, res) {
    res.render("signupInstruc");
})


router.get("/signupTrainee", function (req, res) {
    res.render("signupTrainee");
})




router.get("/", function (req, res) {
    res.render("firstfirst");
})
router.get("/firstPage", function (req, res) {
    res.render("firstPage");
})
router.get("/loginAdmin", function (req, res) {
    res.render("loginAdmin");
})
router.get("/loginInstructor", function (req, res) {
    res.render("loginInstructor");
})
router.get("/loginTrainee", function (req, res) {
    res.render("loginTrainee");
})


router.post("/home", function (req, res) {
    req.session.country = req.body.country;
    res.redirect("/home");
})

router.post("/firstPage", function (req, res) {

    res.redirect("/firstPage");
})

router.post("/login", function (req, res) {

    res.redirect("/login");
})

router.post("/signup", function (req, res) {

    res.redirect("/signup");
})

router.post("/signupAdmin", async (req, res) => {

    var { MongoClient } = require('mongodb');
    var url = 'mongodb+srv://yousef69420:Yousef10white@Cluster0.atly3.mongodb.net/adminstrator?retryWrites=true&w=majority'
    var client = new MongoClient(url, { useNewUrlParser: true, useUnifiedTopology: true })
    await client.connect()
    const inputUsername = req.body.username
    const inputPassword = req.body.password
    var output = await client.db('adminstrator').collection('adminstrator').find().toArray()
    const Country = req.body.country
    var output2 = await client.db('Instructor').collection('Instructor').find().toArray()
    var output3 = await client.db('Trainee').collection('Trainee').find().toArray()




    var bool = false

    output3.forEach((item) => {
        if (item.username == inputUsername)
            bool = true
    })

    output2.forEach((item) => {
        if (item.username == inputUsername)
            bool = true
    })


    output.forEach((item) => {
        if (item.username == inputUsername)
            bool = true
    })
    if (Country == "Select Country") {
        alert('Please select a country')
    }
    else if (inputPassword.length == 0 || inputUsername.length == 0) {
        alert('the password or the username is empty')
    }
    else {
        if (bool == false) {
            var user = { username: inputUsername, password: inputPassword, Country: Country }
            await client.db('adminstrator').collection('adminstrator').insertOne(user)
            alert('registration successful')
            MongoClient.connect(url, function (err, db) {
                if (err) throw err;

            });
            res.redirect('/login')
        }


        else
            alert('please choose another username')
    }





    //  var user = { username: inputUsername, password: inputPassword }
    //var cart = {}
    //await client.db('adminstrtor').collection('adminstrator').insertOne(user)

})

router.post("/signupInstruc", async (req, res) => {

    var { MongoClient } = require('mongodb');
    var url = 'mongodb+srv://yousef69420:Yousef10white@Cluster0.atly3.mongodb.net/Instructor?retryWrites=true&w=majority'
    var client = new MongoClient(url, { useNewUrlParser: true, useUnifiedTopology: true })
    await client.connect()
    const inputUsername = req.body.username
    const inputPassword = req.body.password
    var output = await client.db('Instructor').collection('Instructor').find().toArray()
    const Country = req.body.country

    var output2 = await client.db('adminstrator').collection('adminstrator').find().toArray()

    var output3 = await client.db('Trainee').collection('Trainee').find().toArray()

    var bool = false
    output3.forEach((item) => {
        if (item.username == inputUsername)
            bool = true
    })

    output2.forEach((item) => {
        if (item.username == inputUsername)
            bool = true
    })



    output.forEach((item) => {
        if (item.username == inputUsername)
            bool = true
    })
    if (Country == "Select Country") {
        alert('Please select a country')
    }
    else if (inputPassword.length == 0 || inputUsername.length == 0) {
        alert('the password or the username is empty')
    }
    else {
        if (bool == false) {
            var user = { username: inputUsername, password: inputPassword, Country: Country }
            await client.db('Instructor').collection('Instructor').insertOne(user)
            alert('registration successful')
            MongoClient.connect(url, function (err, db) {
                if (err) throw err;

            });
            res.redirect('/login')
        }


        else
            alert('please choose another username')
    }

})

router.post("/signupTrainee", async (req, res) => {

    var { MongoClient } = require('mongodb');
    var url = 'mongodb+srv://yousef69420:Yousef10white@Cluster0.atly3.mongodb.net/Trainee?retryWrites=true&w=majority'
    var client = new MongoClient(url, { useNewUrlParser: true, useUnifiedTopology: true })
    await client.connect()
    const inputUsername = req.body.username
    const inputPassword = req.body.password
    var output = await client.db('Trainee').collection('Trainee').find().toArray()
    const Country = req.body.country

    var output2 = await client.db('adminstrator').collection('adminstrator').find().toArray()

    var output3 = await client.db('Instructor').collection('Instructor').find().toArray()

    var bool = false
    output2.forEach((item) => {
        if (item.username == inputUsername)
            bool = true
    })

    output3.forEach((item) => {
        if (item.username == inputUsername)
            bool = true
    })



    output.forEach((item) => {
        if (item.username == inputUsername)
            bool = true
    })
    if (Country == "Select Country") {
        alert('Please select a country')
    }
    else if (inputPassword.length == 0 || inputUsername.length == 0) {
        alert('the password or the username is empty')
    }
    else {
        if (bool == false) {
            var user = { username: inputUsername, password: inputPassword, Country: Country }
            await client.db('Trainee').collection('Trainee').insertOne(user)
            alert('registration successful')
            MongoClient.connect(url, function (err, db) {
                if (err) throw err;

            });
            res.redirect('/login')
        }


        else
            alert('please choose another username')
    }
})

router.post("/loginAdmin", async (req, res) => {
    const inputUsername = req.body.username
    req.session.username = inputUsername
    const inputPassword = req.body.password

    var { MongoClient } = require('mongodb');
    var url = 'mongodb+srv://yousef69420:Yousef10white@Cluster0.atly3.mongodb.net/adminstrator?retryWrites=true&w=majority'
    var client = new MongoClient(url, { useNewUrlParser: true, useUnifiedTopology: true })
    await client.connect()


    var output = await client.db('adminstrator').collection('adminstrator').find().toArray()
    console.log(output)
    var bool = false
    //var id = id_find(output, inputUsername)
    //console.log(id)
    //req.session.ik = id
    output.forEach((element) => {
        if (element.username == inputUsername && element.password == inputPassword) {
            const s = element.Country
            req.session.Country = s
            bool = true
        }
    }

    )
    if (bool) {
        req.session.isLoggedIn = true
        res.redirect('/home')
    }
    else
        alert('The password or the username is incorrect')


})





module.exports = router;